// Frederick Jacques Joubert
// 2018-4-5
// Cosc 425 A20

// File: 05Prob1235e.pepcpu
// Computer Systems, Fifth Edition
// Problem 12.35(e)
// Two-byte data bus
// LDWA here,sx
// RTL: A <- Oprnd; N <- A<0, Z <- A=0
// Stack-indexed addressing: Oprnd = Mem[SP + OprndSpec + X]

UnitPre: IR=0xC600F0, SP=0xFAFE, X=0x0010, Mem[0xFBFE]=0x26D1
UnitPre: N=1, Z=1, V=0, C=1, S=0
UnitPost: A=0x26D1, N=0, Z=0, V=0, C=1

// UnitPre: IR=0xC600F0, SP=0xFAFE, X=0x0100, Mem[0xFCEE]=0xD126
// UnitPre: N=0, Z=1, V=0, C=1, S=0
// UnitPost: A=0xD126, N=1, Z=0, V=0, C=1

// UnitPre: IR=0xC600F0, SP=0xFAFE, X=0x0010, Mem[0xFBFE]=0x0000, A=0xFFFF
// UnitPre: N=1, Z=0, V=0, C=1, S=0
// UnitPost: A=0x0000, N=0, Z=1, V=0, C=1

// 12,13 <- SP + OprndSpec
1. A=5, B=10, AMux=1, ALU=1, CMux=1, C=13; SCk, LoadCk 
2. A=4, B=9, AMux=1, ALU=2, CSMux=1, CMux=1, C=12; LoadCk

// 12,13 <- 12,13 + X
3. A=13, B=3, AMux=1, ALU=1, CMux=1, C=13; SCk, LoadCk 
4. A=12, B=2, AMux=1, ALU=2, CSMux=1, CMux=1, C=12; LoadCk

// MAR <- 12,13
5. A=12, B=13, MARMux=1; MARCk

// MDR <- Mem[12,13]
6. MemRead
7. MemRead
8. MemRead, MDREMux=0, MDROMux=0; MDRECk, MDROCk

// 0 <- MDRE
9. EOMux=0, AMux=0, ALU=0, AndZ=0, CMux=1, C=0; NCk, ZCk, LoadCk

// 1 <- MDRO
10. EOMux=1, AMux=0, ALU=0, AndZ=1, CMux=1, C=1; ZCk, LoadCk

//// Percent Savings
// LDWA here,sx w/ One-byte data bus #cycles = 13
// LDWA here,sx w/ Two-byte data bus #cycles = 10

// 13 - 10 = 3 cycles saved
// => 3/13 = 23% Savings!

